/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wrs.sales;

import java.awt.BorderLayout;
import java.awt.Color;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Timer;
import java.util.TimerTask;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import org.jfree.chart.ChartFactory;
import org.jfree.chart.ChartPanel;
import org.jfree.chart.JFreeChart;
import org.jfree.chart.plot.CategoryPlot;
import org.jfree.chart.plot.PlotOrientation;
import org.jfree.data.category.DefaultCategoryDataset;
import wrs.Menu;
import wrs.SystemWRS;

/**
 *
 * @author PC
 */
public class SalesReport extends javax.swing.JFrame {

    /**
     * Creates new form SalesReport
     */
    public SalesReport() {
        initComponents();
        Timer dateInfotimer = new Timer();
        dateInfotimer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                String currentDateTime = SystemWRS.getCurrentDateTime();
                datetimeLBL.setText(currentDateTime);
                //System.out.println(currentDateTime);
            }
        }, 0, 1000);
        fetchTransaction();
        showSales();
        fetchRevenue();
        showProduct();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        datetimeLBL = new javax.swing.JLabel();
        jLayeredPane3 = new javax.swing.JLayeredPane();
        salesPNL = new javax.swing.JPanel();
        salesChartPNL = new javax.swing.JPanel();
        totalRevLBL = new javax.swing.JLabel();
        pendingRevLBL = new javax.swing.JLabel();
        currentRevLBL = new javax.swing.JLabel();
        productPNL = new javax.swing.JPanel();
        productChartPNL = new javax.swing.JPanel();
        transactionPNL = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        navPNL = new javax.swing.JPanel();
        productBTN = new javax.swing.JButton();
        salesBTN = new javax.swing.JButton();
        transactionBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Water Refilling Station [Sales]");
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 800));
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel2.setText("Water Refilling Station");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jLabel3.setText("Inventory and Monitoring System");

        datetimeLBL.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        datetimeLBL.setText("DATE_INFORMATION");

        jLayeredPane3.setLayout(new java.awt.CardLayout());

        salesChartPNL.setLayout(new java.awt.BorderLayout());

        totalRevLBL.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        totalRevLBL.setText("Total Revenue: - ");

        pendingRevLBL.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        pendingRevLBL.setText("Pending Revenue - ");

        currentRevLBL.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        currentRevLBL.setText("Current Revenue: - ");

        javax.swing.GroupLayout salesPNLLayout = new javax.swing.GroupLayout(salesPNL);
        salesPNL.setLayout(salesPNLLayout);
        salesPNLLayout.setHorizontalGroup(
            salesPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(salesChartPNL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(salesPNLLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addComponent(totalRevLBL)
                .addGap(135, 135, 135)
                .addComponent(currentRevLBL)
                .addGap(135, 135, 135)
                .addComponent(pendingRevLBL)
                .addContainerGap(141, Short.MAX_VALUE))
        );
        salesPNLLayout.setVerticalGroup(
            salesPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(salesPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(salesChartPNL, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(salesPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(totalRevLBL)
                    .addComponent(pendingRevLBL)
                    .addComponent(currentRevLBL))
                .addContainerGap(16, Short.MAX_VALUE))
        );

        jLayeredPane3.add(salesPNL, "card2");

        productChartPNL.setLayout(new java.awt.BorderLayout());

        javax.swing.GroupLayout productPNLLayout = new javax.swing.GroupLayout(productPNL);
        productPNL.setLayout(productPNLLayout);
        productPNLLayout.setHorizontalGroup(
            productPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productChartPNL, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        productPNLLayout.setVerticalGroup(
            productPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(productPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(productChartPNL, javax.swing.GroupLayout.PREFERRED_SIZE, 369, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(38, Short.MAX_VALUE))
        );

        jLayeredPane3.add(productPNL, "card3");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Date", "Transaction ID", "Service", "Gallon", "Qty", "Cash", "Change", "Revenue", "Name", "Status"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(30);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(6).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(7).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(8).setPreferredWidth(75);
            jTable1.getColumnModel().getColumn(9).setPreferredWidth(40);
        }

        javax.swing.GroupLayout transactionPNLLayout = new javax.swing.GroupLayout(transactionPNL);
        transactionPNL.setLayout(transactionPNLLayout);
        transactionPNLLayout.setHorizontalGroup(
            transactionPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 777, Short.MAX_VALUE)
                .addContainerGap())
        );
        transactionPNLLayout.setVerticalGroup(
            transactionPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 401, Short.MAX_VALUE)
                .addContainerGap())
        );

        jLayeredPane3.add(transactionPNL, "card4");

        productBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        productBTN.setText("Products");
        productBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                productBTNActionPerformed(evt);
            }
        });

        salesBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        salesBTN.setText("Sales");
        salesBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                salesBTNActionPerformed(evt);
            }
        });

        transactionBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        transactionBTN.setText("Transactions");
        transactionBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transactionBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navPNLLayout = new javax.swing.GroupLayout(navPNL);
        navPNL.setLayout(navPNLLayout);
        navPNLLayout.setHorizontalGroup(
            navPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(salesBTN, javax.swing.GroupLayout.DEFAULT_SIZE, 120, Short.MAX_VALUE)
                    .addComponent(productBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transactionBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        navPNLLayout.setVerticalGroup(
            navPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPNLLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(salesBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(productBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(transactionBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(186, Short.MAX_VALUE))
        );

        backBTN.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(backBTN))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(navPNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jLayeredPane3))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel2)
                                    .addComponent(jLabel3))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(datetimeLBL)))))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(datetimeLBL)))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(navPNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jLayeredPane3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(backBTN)
                .addGap(13, 13, 13))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void productBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_productBTNActionPerformed
        // TODO add your handling code here:
        switchPanels(productPNL);
    }//GEN-LAST:event_productBTNActionPerformed

    private void salesBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_salesBTNActionPerformed
        // TODO add your handling code here:
        switchPanels(salesPNL);
    }//GEN-LAST:event_salesBTNActionPerformed

    private void transactionBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transactionBTNActionPerformed
        // TODO add your handling code here:
        switchPanels(transactionPNL);
    }//GEN-LAST:event_transactionBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
                dispose();
            }
        });
    }//GEN-LAST:event_backBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(SalesReport.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new SalesReport().setVisible(true);
            }
        });
    }
    
    public void switchPanels(javax.swing.JPanel panel)
    {
        jLayeredPane3.removeAll();
        jLayeredPane3.add(panel);
        jLayeredPane3.repaint();
        jLayeredPane3.revalidate();
    }
    
    private void fetchTransaction()
    {
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        ResultSetMetaData rsmd = null;
        
        try
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("select *from transaction ORDER BY date ASC");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
            d.setRowCount(0);
            
            while(rs.next())
            {
            
                Vector v2 = new Vector();
                for(int i = 1; i<=c; i++)
                {
                    v2.add(rs.getString("date"));
                    v2.add(rs.getString("transaction_code"));
                    v2.add(rs.getString("service_type"));
                    v2.add(rs.getString("gallon_type"));
                    v2.add(rs.getInt("quantity"));
                    v2.add(rs.getInt("cash"));
                    v2.add(rs.getInt("change"));
                    v2.add(rs.getInt("revenue"));
                    v2.add(rs.getInt("customer_no"));
                    v2.add(rs.getString("status"));
                }
                d.addRow(v2);  
            }
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    private void fetchRevenue()
    {
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        try
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("SELECT SUM(revenue) AS total from transaction");
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                totalRevLBL.setText("Total Revenue: "+rs.getString("total"));
            }
            
            ps = conn.prepareStatement("SELECT SUM(revenue) AS total from transaction where status = 'Paid' || status = 'Cash'");
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                currentRevLBL.setText("Current Revenue: "+rs.getString("total"));
            }
            
            ps = conn.prepareStatement("SELECT SUM(revenue) AS total from transaction where status = 'Credit'");
            rs = ps.executeQuery();
            
            if(rs.next())
            {
                pendingRevLBL.setText("Pending Revenue: "+rs.getString("total"));
            }
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    }
    
    
    private void showSales()
    {
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        try 
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("SELECT SUM(revenue) AS total, DATE(date) AS cdate, COUNT(*) AS count FROM transaction GROUP BY cdate ORDER BY cdate ASC;");
            rs = ps.executeQuery();
            DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
            while(rs.next())
            {
                int total = rs.getInt("total");
                String date = rs.getString("cdate");   
                barChartData.setValue(total,"Sales", date);    
            }
            JFreeChart barChart = ChartFactory.createBarChart("Daily Sales", "Date", "Revenue", barChartData, PlotOrientation.VERTICAL,false,true,false);
            
            
            CategoryPlot catPlotChart = barChart.getCategoryPlot();
            catPlotChart.setRangeGridlinePaint(Color.BLUE);
            
            ChartPanel barPanel = new ChartPanel(barChart);
            
            salesChartPNL.removeAll();
            salesChartPNL.add(barPanel,BorderLayout.CENTER);
            salesChartPNL.validate(); 
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }
    
    private void showProduct()
    {
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        try
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("SELECT gallon_type, SUM(quantity) as qtotal FROM transaction GROUP BY gallon_type");
            rs = ps.executeQuery();
            DefaultCategoryDataset barChartData = new DefaultCategoryDataset();
            while(rs.next())
            {
                int total = rs.getInt("qtotal");
                String gallon = rs.getString("gallon_type");   
                barChartData.setValue(total,"Sales", gallon);    
            }
            JFreeChart barChart = ChartFactory.createBarChart("Total Container Sold", "Type", "Number of Gallon", barChartData, PlotOrientation.VERTICAL,false,true,false);
            
            
            CategoryPlot catPlotChart = barChart.getCategoryPlot();
            catPlotChart.setRangeGridlinePaint(Color.BLUE);
            
            ChartPanel barPanel = new ChartPanel(barChart);
            
            productChartPNL.removeAll();
            productChartPNL.add(barPanel,BorderLayout.CENTER);
            productChartPNL.validate(); 
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JLabel currentRevLBL;
    private javax.swing.JLabel datetimeLBL;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    private javax.swing.JPanel navPNL;
    private javax.swing.JLabel pendingRevLBL;
    private javax.swing.JButton productBTN;
    private javax.swing.JPanel productChartPNL;
    private javax.swing.JPanel productPNL;
    private javax.swing.JButton salesBTN;
    private javax.swing.JPanel salesChartPNL;
    private javax.swing.JPanel salesPNL;
    private javax.swing.JLabel totalRevLBL;
    private javax.swing.JButton transactionBTN;
    private javax.swing.JPanel transactionPNL;
    // End of variables declaration//GEN-END:variables
}

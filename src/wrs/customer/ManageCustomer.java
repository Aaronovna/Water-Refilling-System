/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package wrs.customer;

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import java.util.Vector;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

import java.util.Timer;
import java.util.TimerTask;



import wrs.Menu;
import wrs.SystemWRS;
import wrs.customer.UpdateCustomer;

/**
 *
 * @author PC
 */
public class ManageCustomer extends javax.swing.JFrame {

    /**
     * Creates new form ManageCustomer
     */
    public ManageCustomer() {
        initComponents();
        Timer dateInfotimer = new Timer();
        dateInfotimer.scheduleAtFixedRate(new TimerTask() {
            @Override
            public void run() {
                String currentDateTime = SystemWRS.getCurrentDateTime();
                datetimeLBL.setText(currentDateTime);
                //System.out.println(currentDateTime);
            }
        }, 0, 1000);
        
        fetchCustomerData();
        fetchCreditData();
        fetchBorrowData();
    }
    
    public int selectedRow = 0;
    private String uName;
    private String uAddress;
    private String uContact;
    private int uCID;
    
    private String pName;
    private int pTID;
    private int pTotal;
    
    private int bTID;
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        datetimeLBL = new javax.swing.JLabel();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        updatePNL = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        updateBTN = new javax.swing.JButton();
        creditPNL = new javax.swing.JPanel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTable2 = new javax.swing.JTable();
        payBTN = new javax.swing.JButton();
        borrowPNL = new javax.swing.JPanel();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTable3 = new javax.swing.JTable();
        returnBTN = new javax.swing.JButton();
        navPNL = new javax.swing.JPanel();
        creditBTN = new javax.swing.JButton();
        updateDetailsBTN = new javax.swing.JButton();
        borrowBTN = new javax.swing.JButton();
        backBTN = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Water Refilling Station [Manage Customer]");
        setResizable(false);
        setSize(new java.awt.Dimension(1280, 800));
        addWindowFocusListener(new java.awt.event.WindowFocusListener() {
            public void windowGainedFocus(java.awt.event.WindowEvent evt) {
                formWindowGainedFocus(evt);
            }
            public void windowLostFocus(java.awt.event.WindowEvent evt) {
            }
        });
        getContentPane().setLayout(new java.awt.CardLayout());

        jLabel2.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        jLabel2.setText("Water Refilling Station");

        jLabel3.setFont(new java.awt.Font("Verdana", 0, 10)); // NOI18N
        jLabel3.setText("Inventory and Monitoring System");

        datetimeLBL.setFont(new java.awt.Font("Verdana", 0, 18)); // NOI18N
        datetimeLBL.setText("DATE_INFORMATION");

        jLayeredPane1.setLayout(new java.awt.CardLayout());

        jScrollPane1.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Customer ID", "Name", "Address", "Contact No."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setPreferredWidth(20);
            jTable1.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable1.getColumnModel().getColumn(2).setPreferredWidth(100);
            jTable1.getColumnModel().getColumn(3).setPreferredWidth(50);
        }

        updateBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        updateBTN.setText("Update");
        updateBTN.setEnabled(false);
        updateBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout updatePNLLayout = new javax.swing.GroupLayout(updatePNL);
        updatePNL.setLayout(updatePNLLayout);
        updatePNLLayout.setHorizontalGroup(
            updatePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePNLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(updatePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, updatePNLLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(updateBTN)))
                .addContainerGap())
        );
        updatePNLLayout.setVerticalGroup(
            updatePNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(updatePNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(updateBTN)
                .addContainerGap(7, Short.MAX_VALUE))
        );

        jLayeredPane1.add(updatePNL, "card2");

        jScrollPane2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jScrollPane2MouseClicked(evt);
            }
        });

        jTable2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Transaction ID", "Customer ID", "Name", "Address", "Contact No.", "Credit"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable2MouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(jTable2);
        if (jTable2.getColumnModel().getColumnCount() > 0) {
            jTable2.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(1).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(2).setPreferredWidth(75);
            jTable2.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable2.getColumnModel().getColumn(4).setPreferredWidth(50);
            jTable2.getColumnModel().getColumn(5).setPreferredWidth(30);
        }

        payBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        payBTN.setText("Pay");
        payBTN.setEnabled(false);
        payBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout creditPNLLayout = new javax.swing.GroupLayout(creditPNL);
        creditPNL.setLayout(creditPNLLayout);
        creditPNLLayout.setHorizontalGroup(
            creditPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(creditPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, creditPNLLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(payBTN)))
                .addContainerGap())
        );
        creditPNLLayout.setVerticalGroup(
            creditPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(creditPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(payBTN)
                .addContainerGap())
        );

        jLayeredPane1.add(creditPNL, "card3");

        jScrollPane3.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N

        jTable3.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Transaction ID", "Customer ID", "Name", "Date", "Gallon Type", "Quantity"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable3MouseClicked(evt);
            }
        });
        jScrollPane3.setViewportView(jTable3);
        if (jTable3.getColumnModel().getColumnCount() > 0) {
            jTable3.getColumnModel().getColumn(0).setPreferredWidth(50);
            jTable3.getColumnModel().getColumn(1).setPreferredWidth(40);
            jTable3.getColumnModel().getColumn(2).setPreferredWidth(50);
            jTable3.getColumnModel().getColumn(3).setPreferredWidth(100);
            jTable3.getColumnModel().getColumn(4).setPreferredWidth(40);
            jTable3.getColumnModel().getColumn(5).setPreferredWidth(20);
        }

        returnBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        returnBTN.setText("Return Container");
        returnBTN.setEnabled(false);
        returnBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                returnBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout borrowPNLLayout = new javax.swing.GroupLayout(borrowPNL);
        borrowPNL.setLayout(borrowPNLLayout);
        borrowPNLLayout.setHorizontalGroup(
            borrowPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(borrowPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 622, Short.MAX_VALUE)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, borrowPNLLayout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(returnBTN)))
                .addContainerGap())
        );
        borrowPNLLayout.setVerticalGroup(
            borrowPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(borrowPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 354, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 13, Short.MAX_VALUE)
                .addComponent(returnBTN)
                .addContainerGap())
        );

        jLayeredPane1.add(borrowPNL, "card4");

        creditBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        creditBTN.setText("Credit Log");
        creditBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                creditBTNActionPerformed(evt);
            }
        });

        updateDetailsBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        updateDetailsBTN.setText("Update Details");
        updateDetailsBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateDetailsBTNActionPerformed(evt);
            }
        });

        borrowBTN.setFont(new java.awt.Font("Verdana", 0, 12)); // NOI18N
        borrowBTN.setText("Borrower List");
        borrowBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                borrowBTNActionPerformed(evt);
            }
        });

        backBTN.setFont(new java.awt.Font("Verdana", 0, 14)); // NOI18N
        backBTN.setText("Back");
        backBTN.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backBTNActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout navPNLLayout = new javax.swing.GroupLayout(navPNL);
        navPNL.setLayout(navPNLLayout);
        navPNLLayout.setHorizontalGroup(
            navPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPNLLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(navPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(updateDetailsBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(creditBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(borrowBTN, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(backBTN, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        navPNLLayout.setVerticalGroup(
            navPNLLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(navPNLLayout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(updateDetailsBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(creditBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(borrowBTN, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 155, Short.MAX_VALUE)
                .addComponent(backBTN)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(navPNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 634, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel2)
                            .addComponent(jLabel3))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 407, Short.MAX_VALUE)
                        .addComponent(datetimeLBL)))
                .addGap(40, 40, 40))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(9, 9, 9)
                        .addComponent(datetimeLBL)))
                .addGap(27, 27, 27)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(navPNL, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(20, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void creditBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_creditBTNActionPerformed
        // TODO add your handling code here:
        switchPanels(creditPNL);
    }//GEN-LAST:event_creditBTNActionPerformed

    private void updateDetailsBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateDetailsBTNActionPerformed
        // TODO add your handling code here:
        switchPanels(updatePNL);
    }//GEN-LAST:event_updateDetailsBTNActionPerformed

    private void borrowBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_borrowBTNActionPerformed
        // TODO add your handling code here:
        switchPanels(borrowPNL);
    }//GEN-LAST:event_borrowBTNActionPerformed

    private void backBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backBTNActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Menu().setVisible(true);
                dispose();
            }
        });
    }//GEN-LAST:event_backBTNActionPerformed

    private void updateBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateBTNActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new UpdateCustomer(uName, uAddress, uContact, uCID).setVisible(true);
            }
        });
    }//GEN-LAST:event_updateBTNActionPerformed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        // TODO add your handling code here:
        selectedRow = jTable1.getSelectedRow();
        if (selectedRow != -1)
        {
            uCID = Integer.parseInt(jTable1.getValueAt(selectedRow, 0).toString());
            uName = jTable1.getValueAt(selectedRow, 1).toString();
            uAddress = jTable1.getValueAt(selectedRow, 2).toString();
            uContact = jTable1.getValueAt(selectedRow, 3).toString();
        }
        updateBTN.setEnabled(true);
    }//GEN-LAST:event_jTable1MouseClicked

    private void formWindowGainedFocus(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowGainedFocus
        // TODO add your handling code here:
        fetchCustomerData();
        fetchCreditData();
        fetchBorrowData();
    }//GEN-LAST:event_formWindowGainedFocus

    private void returnBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_returnBTNActionPerformed
        // TODO add your handling code here:
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        
        try
        {   
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("SELECT * FROM transaction WHERE transaction_code = ?");
            ps.setInt(1,bTID);
            rs = ps.executeQuery();
            int quantity = 0;
            String gallonType = null;
          
            
            if (rs.next())
            {
                quantity = rs.getInt("quantity");
                gallonType = rs.getString("gallon_type");
            }
            
            if(gallonType.equals("Slim"))
            {
                int dbGallonCount = 0;
                ps = conn.prepareStatement("SELECT * FROM system_numeric_data WHERE DID = 1002");
                rs = ps.executeQuery();
                if (rs.next())
                {
                    dbGallonCount = rs.getInt("value");
                }
                
                ps = conn.prepareStatement("UPDATE system_numeric_data SET value = ? WHERE DID = 1002");
                ps.setInt(1, dbGallonCount + quantity);
                ps.executeUpdate();
                
                
            }
            else if(gallonType.equals("Round"))
            {
                int dbGallonCount = 0;
                ps = conn.prepareStatement("SELECT * FROM system_numeric_data WHERE DID = 1003");
                rs = ps.executeQuery();
                if (rs.next())
                {
                    dbGallonCount = rs.getInt("value");
                }
                
                ps = conn.prepareStatement("UPDATE system_numeric_data SET value = ? WHERE DID = 1003");
                ps.setInt(1, dbGallonCount + quantity);
                ps.executeUpdate();
            }

            ps = conn.prepareStatement("UPDATE transaction SET returned = ? WHERE transaction_code = ?");
            ps.setInt(1,1);
            ps.setInt(2,bTID);
            
            if(ps.executeUpdate() == 1)
            {
                JOptionPane.showMessageDialog(null,"Returned Successfully!");
            }
            else
            {
                JOptionPane.showMessageDialog(null,"Something went wrong!");
            }
            
            
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
        returnBTN.setEnabled(false);
    }//GEN-LAST:event_returnBTNActionPerformed

    private void jTable3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable3MouseClicked
        // TODO add your handling code here:
        selectedRow = jTable3.getSelectedRow();
        if (selectedRow != -1)
        {
            bTID = Integer.parseInt(jTable3.getValueAt(selectedRow, 0).toString());
        }
        returnBTN.setEnabled(true);
    }//GEN-LAST:event_jTable3MouseClicked

    private void jScrollPane2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jScrollPane2MouseClicked
        // TODO add your handling code here
    }//GEN-LAST:event_jScrollPane2MouseClicked

    private void jTable2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable2MouseClicked
        // TODO add your handling code here:
        selectedRow = jTable2.getSelectedRow();
        if (selectedRow != -1)
        {
            pName = jTable2.getValueAt(selectedRow, 2).toString();
            pTID = Integer.parseInt(jTable2.getValueAt(selectedRow, 0).toString());
            pTotal = Integer.parseInt(jTable2.getValueAt(selectedRow, 5).toString());
        }
        payBTN.setEnabled(true);
    }//GEN-LAST:event_jTable2MouseClicked

    private void payBTNActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBTNActionPerformed
        // TODO add your handling code here:
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new PayCredit(pName, pTID, pTotal).setVisible(true);
            }
        });
    }//GEN-LAST:event_payBTNActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(ManageCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(ManageCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(ManageCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(ManageCustomer.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new ManageCustomer().setVisible(true);
            }
        });
    }
    
    public void switchPanels(javax.swing.JPanel panel)
    {
        jLayeredPane1.removeAll();
        jLayeredPane1.add(panel);
        jLayeredPane1.repaint();
        jLayeredPane1.revalidate();
    }
    
    private void fetchCustomerData()
    {
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        ResultSetMetaData rsmd = null;
        try
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("select *from customer");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            DefaultTableModel d = (DefaultTableModel)jTable1.getModel();
            d.setRowCount(0);
            
            while(rs.next())
            {
            
                Vector v2 = new Vector();
                for(int i = 1; i<=c; i++)
                {
                    v2.add(rs.getInt("customer_no"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("address"));
                    v2.add(rs.getString("contact_no"));
                }
                d.addRow(v2);  
            }
        }
        catch (SQLException e) 
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }
    
    private void fetchCreditData()
    {
        //SELECT * FROM credit INNER JOIN customer ON credit.Fcustomer_no = customer.customer_no INNER JOIN transaction ON credit.Ftransaction_code = transaction.transaction_code
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        ResultSetMetaData rsmd = null;
        
        try
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("SELECT * FROM credit INNER JOIN customer ON credit.Fcustomer_no = customer.customer_no INNER JOIN transaction ON credit.Ftransaction_code = transaction.transaction_code where status = 'credit'");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            DefaultTableModel d = (DefaultTableModel)jTable2.getModel();
            d.setRowCount(0);
            
            while(rs.next())
            {
            
                Vector v2 = new Vector();
                for(int i = 1; i<=c; i++)
                {
                    v2.add(rs.getInt("transaction_code"));
                    v2.add(rs.getInt("Customer_no"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("address"));
                    v2.add(rs.getString("contact_no"));
                    v2.add(rs.getString("revenue"));
                }
                d.addRow(v2);  
            }
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
    }
    
    private void fetchBorrowData()
    {   
        Connection conn = null;
        PreparedStatement ps = null;
        ResultSet rs = null;
        ResultSetMetaData rsmd = null;
        
        try
        {
            conn = SystemWRS.MsSqlDB();
            ps = conn.prepareStatement("SELECT * FROM borrow INNER JOIN customer ON borrow.Fcustomer_no = customer.customer_no INNER JOIN transaction ON borrow.Ftransaction_code = transaction.transaction_code where returned = 0");
            rs = ps.executeQuery();
            rsmd = rs.getMetaData();
            
            int c = rsmd.getColumnCount();
            DefaultTableModel d = (DefaultTableModel)jTable3.getModel();
            d.setRowCount(0);
            
            while(rs.next())
            {
            
                Vector v2 = new Vector();
                for(int i = 1; i<=c; i++)
                {
                    v2.add(rs.getInt("transaction_code"));
                    v2.add(rs.getInt("Customer_no"));
                    v2.add(rs.getString("name"));
                    v2.add(rs.getString("date"));
                    v2.add(rs.getString("gallon_type"));
                    v2.add(rs.getInt("quantity"));
                }
                d.addRow(v2);  
            }
            
        }
        catch(SQLException e)
        {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
        
    
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton backBTN;
    private javax.swing.JButton borrowBTN;
    private javax.swing.JPanel borrowPNL;
    private javax.swing.JButton creditBTN;
    private javax.swing.JPanel creditPNL;
    private javax.swing.JLabel datetimeLBL;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable jTable2;
    private javax.swing.JTable jTable3;
    private javax.swing.JPanel navPNL;
    private javax.swing.JButton payBTN;
    private javax.swing.JButton returnBTN;
    private javax.swing.JButton updateBTN;
    private javax.swing.JButton updateDetailsBTN;
    private javax.swing.JPanel updatePNL;
    // End of variables declaration//GEN-END:variables
}


